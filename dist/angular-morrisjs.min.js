!function(e,i,t){"use strict";var r=e.module("angular-morrisjs",[]),n=function(i,r,n){if(e.isDefined(r)||(r=[]),!e.isDefined(i))return t;if(-1!==r.indexOf(i))return i;if(n!==!0){if("true"===i)return!0;if("false"===i)return!1}return t};r.factory("Morris",[function(){return{b:i.Bar,l:i.Line,a:i.Area,d:i.Donut}}]),r.service("MorrisOptionsParser",["$parse",function(i){this.parseValues=function(i,r,n){if(e.isDefined(r)||(r=[]),!e.isDefined(i))return t;if(-1!==r.indexOf(i))return i;if(n!==!0){if("true"===i)return!0;if("false"===i)return!1}return t},this.getBasicOptions=function(e,t,r){return{element:e,data:i(t.data)(r),additional:{resize:this.parseValues(t.resize)}}},this.getValuesOptions=function(e,t){return{xkey:e.xkey,ykeys:i(e.ykeys)(t),labels:i(e.labels)(t),hideHover:this.parseValues(e.hideHover,["always","auto"]),asFunctions:{hoverCallback:i(e.hoverCallback)(t)}}},this.getGridOptions=function(e){return{axes:this.parseValues(e.axes),grid:this.parseValues(e.grid),additional:{gridTextColor:e.gridTextColor,gridTextSize:e.gridTextSize,gridTextFamily:e.gridTextFamily,gridTextWeight:e.gridTextWeight}}},this.getLinesOptions=function(e,t){return{lineColors:i(e.lineColors)(t),lineWidth:e.lineWidth,pointSize:e.pointSize,pointFillColors:i(e.pointFillColors)(t),pointStrokeColors:e.pointStrokeColors,ymax:e.ymax,ymin:e.ymin,smooth:n(e.smooth),parseTime:n(e.parseTime),postUnits:e.postUnits,preUnits:e.preUnits,xLabels:e.xLabels,xLabelAngle:e.xLabelAngle,goals:i(e.goals)(t),events:i(e.events)(t),additional:{fillOpacity:e.fillOpacity,goalStrokeWidth:e.goalStrokeWidth,goalLineColors:e.goalLineColors,eventStrokeWidth:e.eventStrokeWidth,eventLineColors:e.eventLineColors,continuousLine:n(e.continuousLine)},asFunctions:{dateFormat:i(e.dateFormat)(t),xLabelFormat:i(e.xLabelFormat)(t)}}},this.parse=function(i){return e.forEach(i.asFunctions,function(t,r){e.isFunction(t)&&(i[r]=t)}),e.forEach(i.additional,function(t,r){e.isDefined(t)&&(i[r]=t)}),i}}]),r.directive("barChart",["$parse","Morris","MorrisOptionsParser",function(i,t,r){return{restrict:"AE",template:"<div></div>",replace:!0,link:function(n,s,o){var a={barColors:i(o.barColors)(n),stacked:r.parseValues(o.stacked)};e.extend(a,r.getBasicOptions(s,o,n),r.getValuesOptions(o,n),r.getGridOptions(o)),t.b(r.parse(a))}}}]),r.directive("lineChart",["Morris","MorrisOptionsParser",function(i,t){return{restrict:"AE",template:"<div></div>",replace:!0,link:function(r,n,s){var o={};e.extend(o,t.getBasicOptions(n,s,r),t.getValuesOptions(s,r),t.getGridOptions(s),t.getLinesOptions(s,r)),i.l(t.parse(o))}}}]),r.directive("areaChart",["Morris","MorrisOptionsParser",function(i,t){return{restrict:"AE",template:"<div></div>",replace:!0,link:function(r,s,o){var a={behaveLikeLine:n(o.behaveLikeLine)};e.extend(a,t.getBasicOptions(s,o,r),t.getValuesOptions(o,r),t.getGridOptions(o),t.getLinesOptions(o,r)),i.a(t.parse(a))}}}]),r.directive("donutChart",["$parse","Morris","MorrisOptionsParser",function(i,t,r){return{restrict:"AE",template:"<div></div>",replace:!0,link:function(n,s,o){var a={colors:i(o.colors)(n),asFunctions:{formatter:i(o.formatter)(n)}};e.extend(a,r.getBasicOptions(s,o,n)),t.d(r.parse(a))}}}])}(window.angular,window.Morris);